{"ast":null,"code":"var _jsxFileName = \"/Users/johnjalali/repos/FullStackOpen/part1/unicafe/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Button = props => /*#__PURE__*/_jsxDEV(\"button\", {\n  onClick: props.handleClick,\n  children: props.text\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 4,\n  columnNumber: 3\n}, this);\n_c = Button;\nconst StatisticsLine = props => {\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\" \", props.text, \", \", props.value]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 7\n  }, this);\n};\n_c2 = StatisticsLine;\nconst Statistics = props => {\n  const calcAverage = (good, neutral, bad) => {\n    const total = good + bad + neutral;\n    bad = bad * -1;\n    return (good + bad) / total;\n  };\n  const calcPos = (good, neutral, bad) => {\n    const total = good + bad + neutral;\n    return good / total;\n  };\n  if (props.good > 0 || props.neutral > 0 || props.bad > 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(StatisticsLine, {\n        text: \"Good\",\n        value: props.good\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(StatisticsLine, {\n        text: \"Neutral\",\n        value: props.neutral\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(StatisticsLine, {\n        text: \"Bad\",\n        value: props.bad\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(StatisticsLine, {\n        text: \"All\",\n        value: props.good + props.neutral + props.bad\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(StatisticsLine, {\n        text: \"Average\",\n        value: calcAverage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(StatisticsLine, {\n        text: \"Positive\",\n        value: calcPos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, this);\n  }\n  // if all props 0\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" No feedback given\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_c3 = Statistics;\nconst App = () => {\n  _s();\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBed] = useState(0);\n  const setGoodValue = newValue => {\n    setGood(newValue);\n  };\n  const setBadValue = newValue => {\n    setBed(newValue);\n  };\n  const setNeutralValue = newValue => {\n    setNeutral(newValue);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => setGoodValue(good + 1),\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => setNeutralValue(neutral + 1),\n      text: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => setBadValue(bad + 1),\n      text: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      good: good,\n      bad: bad,\n      neutral: neutral\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"gSULuU8v5uqzh8nIfo6tg8vECNg=\");\n_c4 = App;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"StatisticsLine\");\n$RefreshReg$(_c3, \"Statistics\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Button","props","onClick","handleClick","children","text","fileName","_jsxFileName","lineNumber","columnNumber","_c","StatisticsLine","value","_c2","Statistics","calcAverage","good","neutral","bad","total","calcPos","_c3","App","_s","setGood","setNeutral","setBed","setGoodValue","newValue","setBadValue","setNeutralValue","_c4","$RefreshReg$"],"sources":["/Users/johnjalali/repos/FullStackOpen/part1/unicafe/src/App.js"],"sourcesContent":["import { useState } from \"react\"\n\nconst Button = (props) => (\n  <button onClick={props.handleClick}>\n    {props.text}\n  </button>\n)\n\nconst StatisticsLine = (props) => {\n  return (\n      <p> {props.text}, {props.value}</p>\n  )\n}\n\nconst Statistics = (props) => {\n\n  const calcAverage = (good, neutral, bad) => {\n    const total = good + bad + neutral\n    bad = bad * -1\n    return((good + bad) / total)\n  }\n\n  const calcPos = (good, neutral, bad) => {\n    const total = good + bad + neutral\n    return(\n      good / total\n    )\n  }\n  if ((props.good > 0) || (props.neutral > 0) || (props.bad > 0)){\n  return (\n    <div>\n      <StatisticsLine text=\"Good\" value={props.good} />\n      <StatisticsLine text=\"Neutral\" value={props.neutral} />\n      <StatisticsLine text=\"Bad\" value={props.bad} />\n      <StatisticsLine text=\"All\" value={props.good + props.neutral + props.bad} />\n      <StatisticsLine text=\"Average\" value={calcAverage} />\n      <StatisticsLine text=\"Positive\" value={calcPos} />\n    </div> \n    )\n  }\n  // if all props 0\n  return (\n    <div>\n      <p> No feedback given</p>\n    </div>\n  )\n}\n\nconst App = () => {\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBed] = useState(0)\n\n  const setGoodValue = newValue => {\n    setGood(newValue)\n  }\n  const setBadValue = newValue => {\n    setBed(newValue)\n  }\n  const setNeutralValue = newValue => {\n    setNeutral(newValue)\n  }\n\n  return (\n    <div>\n      <h1>Give feedback</h1>\n      <Button handleClick={() => setGoodValue(good + 1)} text = \"good\" />\n      <Button handleClick={() => setNeutralValue(neutral + 1)} text = \"neutral\" />\n      <Button handleClick={() => setBadValue(bad + 1)} text = \"bad\" />\n    <Statistics good={good} bad={bad} neutral={neutral} />\n </div>\n  )\n}\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}