{"ast":null,"code":"var _jsxFileName = \"/Users/johnjalali/repos/FullStackOpen/part1/unicafe/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Button = props => /*#__PURE__*/_jsxDEV(\"button\", {\n  onClick: props.handleClick,\n  children: props.text\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 4,\n  columnNumber: 3\n}, this);\n_c = Button;\nconst Statistics = props => {\n  const calcAverage = (good, neutral, bad) => {\n    const total = good + bad + neutral;\n    bad = bad * -1;\n    return (good + bad) / total;\n  };\n  const calcPos = (good, neutral, bad) => {\n    const total = good + bad + neutral;\n    return good / total;\n  };\n  if (props.good > 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"LOL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" good \", props.good, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 32\n      }, this), \"neutral \", props.neutral, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 34\n      }, this), \"bad \", props.bad, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 26\n      }, this), \"all \", props.good + props.neutral + props.bad, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 55\n      }, this), \"average \", calcAverage(props.good, props.neutral, props.bad), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 70\n      }, this), \"positive \", calcPos(props.good, props.neutral, props.bad), \" %\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Statistics;\nconst App = () => {\n  _s();\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBed] = useState(0);\n  const setGoodValue = newValue => {\n    setGood(newValue);\n  };\n  const setBadValue = newValue => {\n    setBed(newValue);\n  };\n  const setNeutralValue = newValue => {\n    setNeutral(newValue);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => setGoodValue(good + 1),\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => setNeutralValue(neutral + 1),\n      text: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => setBadValue(bad + 1),\n      text: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      good: good,\n      bad: bad,\n      neutral: neutral\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"gSULuU8v5uqzh8nIfo6tg8vECNg=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"Statistics\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Button","props","onClick","handleClick","children","text","fileName","_jsxFileName","lineNumber","columnNumber","_c","Statistics","calcAverage","good","neutral","bad","total","calcPos","_c2","App","_s","setGood","setNeutral","setBed","setGoodValue","newValue","setBadValue","setNeutralValue","_c3","$RefreshReg$"],"sources":["/Users/johnjalali/repos/FullStackOpen/part1/unicafe/src/App.js"],"sourcesContent":["import { useState } from \"react\"\n\nconst Button = (props) => (\n  <button onClick={props.handleClick}>\n    {props.text}\n  </button>\n)\n\nconst Statistics = (props) => {\n\n  const calcAverage = (good, neutral, bad) => {\n    const total = good + bad + neutral\n    bad = bad * -1\n    return((good + bad) / total)\n  }\n\n  const calcPos = (good, neutral, bad) => {\n    const total = good + bad + neutral\n    return(\n      good / total\n    )\n  }\n  if (props.good > 0) {\n    return (\n      <div>\n        <p>LOL</p>\n      </div>\n    )\n  }\n  return (\n    <div>\n    <h2>statistics</h2>\n          <p> good {props.good}<br></br>\n          neutral {props.neutral}<br></br>\n          bad {props.bad}<br></br>\n          all {props.good + props.neutral + props.bad}<br></br>\n          average {calcAverage(props.good, props.neutral, props.bad)}<br></br>\n          positive {calcPos(props.good, props.neutral, props.bad)} %</p>\n    </div> \n    )\n}\n\nconst App = () => {\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBed] = useState(0)\n\n  const setGoodValue = newValue => {\n    setGood(newValue)\n  }\n  const setBadValue = newValue => {\n    setBed(newValue)\n  }\n  const setNeutralValue = newValue => {\n    setNeutral(newValue)\n  }\n\n  return (\n    <div>\n      <h1>Give feedback</h1>\n      <Button handleClick={() => setGoodValue(good + 1)} text = \"good\" />\n      <Button handleClick={() => setNeutralValue(neutral + 1)} text = \"neutral\" />\n      <Button handleClick={() => setBadValue(bad + 1)} text = \"bad\" />\n    <Statistics good={good} bad={bad} neutral={neutral} />\n </div>\n  )\n}\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}